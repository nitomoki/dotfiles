
[[plugins]]
repo = 'Shougo/dein.vim'
hook_source = '''
    let g:deoplete#enable_at_startup = 1
    let g:deoplete#auto_complete_delay = 0
    let g:deoplete#auto_complete_start_length = 1
    let g:deoplete#enable_camel_case = 0
    let g:deoplete#enable_ignore_case = 0
    let g:deoplete#enable_refresh_always = 0
    let g:deoplete#enable_smart_case = 1
    let g:deoplete#file#enable_buffer_path = 1
    let g:deoplete#max_list = 10000
    '''

[[plugins]]
repo = 'vim-jp/vimdoc-ja'

[[plugins]]
repo = 'mhinz/neovim-remote'


[[plugins]]
repo = 'tomasr/molokai'

hook_add = '''
    set background=dark
    au MyAutoCmd VimEnter * nested colorscheme molokai
'''

[[plugins]]
repo = 'Yggdroot/indentLine'

[[plugins]]
repo = 'scrooloose/syntastic'

[[plugins]]
repo = 'inkarkat/vim-SyntaxRange'

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'tpope/vim-surround'



# lightline
[[plugins]]
repo = 'powerline/powerline-fonts'

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
    let g:lightline = {
            \ 'colorscheme': 'molokai',
            \ 'mode_map': {'c': 'NORMAL'},
            \ 'active': {
            \   'left': [ [ 'mode', 'paste' ], [ 'fugitive', 'filename' ] ]
            \ },
            \ 'tabline': {
            \   'left': [ [ 'test' , 'tabs' ] ],
            \   'right': [ [ 'close' ] ]
            \ },
            \ 'separator': { 'left': "\ue0b0", 'right': "\ue0b2" },
            \ 'subseparator': { 'left': "\ue0b1", 'right': "\ue0b3" },
            \ 'component': {
            \   'test': 'Hello, world'
            \ },
            \ 'component_function': {
            \   'modified': 'LightlineModified',
            \   'readonly': 'LightlineReadonly',
            \   'fugitive': 'LightlineFugitive',
            \   'filename': 'LightlineFilename',
            \   'fileformat': 'LightlineFileformat',
            \   'filetype': 'LightlineFiletype',
            \   'fileencoding': 'LightlineFileencoding',
            \   'mode': 'LightlineMode'
            \ }
            \ }
    
    function! LightlineModified()
      return &ft =~ 'help\|vimfiler\|gundo' ? '' : &modified ? '+' : &modifiable ? '' : '-'
    endfunction
    
    function! LightlineReadonly()
      return &ft !~? 'help\|vimfiler\|gundo' && &readonly ? 'x' : ''
    endfunction
    
    function! LightlineFilename()
      return ('' != LightlineReadonly() ? LightlineReadonly() . ' ' : '') .
            \ (&ft == 'vimfiler' ? vimfiler#get_status_string() :
            \  &ft == 'vimshell' ? vimshell#get_status_string() :
            \ '' != expand('%:t') ? expand('%:t') : '[No Name]') .
            \ ('' != LightlineModified() ? ' ' . LightlineModified() : '')
    endfunction
    
    function! LightlineFugitive()
      if &ft !~? 'vimfiler\|gundo' && exists('*fugitive#head')
        return fugitive#head()
      else
        return ''
      endif
    endfunction
    
    function! LightlineFileformat()
      return winwidth(0) > 70 ? &fileformat : ''
    endfunction
    
    function! LightlineFiletype()
      return winwidth(0) > 70 ? (&filetype !=# '' ? &filetype : 'no ft') : ''
    endfunction
    
    function! LightlineFileencoding()
      return winwidth(0) > 70 ? (&fenc !=# '' ? &fenc : &enc) : ''
    endfunction
    
    function! LightlineMode()
      return winwidth(0) > 60 ? lightline#mode() : ''
    endfunction
'''

